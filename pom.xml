<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.8</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.etlions.serverless</groupId>
	<artifactId>multiplexor-template</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>multiplexor-template</name>
	<description>this is a serverless multiplexor template</description>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>2021.0.5</spring-cloud.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-function-web</artifactId>
		</dependency>
		
		<dependency>
		  <groupId>org.springframework.cloud</groupId>
		  <artifactId>spring-cloud-function-adapter-aws</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
	  <plugins>
	     <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-deploy-plugin</artifactId>
	        <configuration>
	           <skip>true</skip>
	        </configuration>
	     </plugin>
	     <plugin>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-maven-plugin</artifactId>
	        <configuration>
				<excludes>
					<exclude>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
					</exclude>
				</excludes>
			</configuration>
			
			<executions>
		        <!-- Execution for healthCheck function -->
		        <execution>
		          <id>build-healthCheck</id>
		          <goals>
		            <goal>repackage</goal>
		          </goals>
		          <configuration>
		            <classifier>healthCheck</classifier>
		            <mainClass>org.springframework.cloud.function.adapter.aws.FunctionInvoker</mainClass>
		            <attach>false</attach>
		          </configuration>
		        </execution>
		
		        <!-- Execution for toUpperCase function -->
		        <execution>
		          <id>build-toUpperCase</id>
		          <goals>
		            <goal>repackage</goal>
		          </goals>
		          <configuration>
		            <classifier>toUpperCase</classifier>
		            <mainClass>org.springframework.cloud.function.adapter.aws.FunctionInvoker</mainClass>
		            <attach>false</attach>
		          </configuration>
		        </execution>
		
		        <!-- Execution for eatPayload function -->
		        <execution>
		          <id>build-eatPayload</id>
		          <goals>
		            <goal>repackage</goal>
		          </goals>
		          <configuration>
		            <classifier>eatPayload</classifier>
		            <mainClass>com.etlions.serverless.multiplexortemplate.MultiplexorTemplateApplication</mainClass>
		            <attach>false</attach>
		          </configuration>
		        </execution>
		     </executions>
	        <dependencies>
	           <dependency>
	              <groupId>org.springframework.boot.experimental</groupId>
	              <artifactId>spring-boot-thin-layout</artifactId>
	              <version>1.0.28.RELEASE</version>
	           </dependency>
	        </dependencies>
	     </plugin>
<!--	     <plugin>-->
<!--	        <groupId>org.apache.maven.plugins</groupId>-->
<!--	        <artifactId>maven-shade-plugin</artifactId>-->
<!--	        <configuration>-->
<!--	           <createDependencyReducedPom>false</createDependencyReducedPom>-->
<!--	           <shadedArtifactAttached>true</shadedArtifactAttached>-->
<!--	           <shadedClassifierName>aws</shadedClassifierName>-->
<!--	        </configuration>-->
<!--	     </plugin>-->
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-shade-plugin</artifactId>
			  <executions>
			    <!-- Execution for creating the fat jar for the entire application -->
			    <execution>
			      <id>shade</id>
			      <goals>
			        <goal>shade</goal>
			      </goals>
			      <configuration>
			        <createDependencyReducedPom>false</createDependencyReducedPom>
			        <shadedArtifactAttached>true</shadedArtifactAttached>
			        <shadedClassifierName>aws</shadedClassifierName>
			      </configuration>
			    </execution>
			    <!-- Execution for creating fat jars for individual functions -->
			    <execution>
			      <id>shade-healthCheck</id>
			      <goals>
			        <goal>shade</goal>
			      </goals>
			      <configuration>
			        <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-healthCheck.jar</outputFile>
			        <transformers>
			          <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
			            <mainClass>org.springframework.cloud.function.adapter.aws.FunctionInvoker</mainClass>
			          </transformer>
			        </transformers>
			      </configuration>
			    </execution>
			    <execution>
			      <id>shade-toUpperCase</id>
			      <goals>
			        <goal>shade</goal>
			      </goals>
			      <configuration>
			        <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-toUpperCase.jar</outputFile>
			        <transformers>
			          <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
			            <mainClass>org.springframework.cloud.function.adapter.aws.FunctionInvoker</mainClass>
			          </transformer>
			        </transformers>
			      </configuration>
			    </execution>
			    <execution>
			      <id>shade-eatPayload</id>
			      <goals>
			        <goal>shade</goal>
			      </goals>
			      <configuration>
			        <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-eatPayload.jar</outputFile>
			        <transformers>
			          <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
			            <mainClass>org.springframework.cloud.function.adapter.aws.FunctionInvoker</mainClass>
			          </transformer>
			        </transformers>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
	  </plugins>
	</build>
</project>
